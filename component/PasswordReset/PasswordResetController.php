<?php

namespace Neoan3\Component\PasswordReset;

use Neoan3\Apps\Ops;
use Neoan3\Apps\Template;
use Neoan3\Frame\BluaBlue;
use Neoan3\Model\Article\ArticleModel;
use Neoan3\Model\User\UserModel;
use Neoan3\Provider\Model\InitModel;

/**
 * Class PasswordResetController
 * @package Neoan3\Component\PasswordReset
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */
class PasswordResetController extends BluaBlue
{
    /**
     * Route: PasswordReset
     */
    function init(): void
    {
        $this->renderer->includeElement('PasswordReset');
        $this->hook('main', 'passwordReset', []);
        $this->output();
    }

    /**
     * @throws \Exception
     */
    #[InitModel(UserModel::class)]
    #[InitModel(ArticleModel::class)]
    function postPasswordReset($body)
    {
        $this->honeyPot($body['code']);
        // find user
        $user = UserModel::find(['user_email.email' => $body['email']]);
        if (!empty($user)) {
            $proceed = false;
            if (isset($body['user_name']) && $user[0]['user_name'] === $body['user_name']) {
                $proceed = true;
            } elseif (isset($body['slug'])) {
                $parts = explode('/', $body['slug']);
                $slug = end($parts);
                if (!empty(ArticleModel::find(['slug' => $slug, 'author_user_id' => '$' . $user[0]['id']]))) {
                    $proceed = true;
                }
            }
            if ($proceed) {
                // insert confirm_code
                $code = Ops::randomString(32);
                $this->provider['db']->smart('user_password', [
                    'user_id' => '$' . $user[0]['id'],
                    'password' => '=' . password_hash($body['password'], PASSWORD_DEFAULT),
                    'confirm_code' => $code
                ]);
                $content = Template::embrace(
                    '<h3>Password reset request from blua.blue</h3>' .
                    '<p>A password reset request was triggered. To activate your new password visit <br/>'.
                    '<a href="{{link}}">this link</a> <br> or enter {{code}} manually when prompted</p><p>Full link: {{link}}</p>',
                    ['link' => base . 'password-reset/' . $code . '?email=' . $body['email'], 'code'=>$code]
                );

                $response = $this->standardMail($body['email'], $body['user_name'], "Let's get you into blua.blue", $content);
                if ($response->success()) {
                    return ['error' => false];
                }
                return ['error'=>true, 'limit'=> true];
            }
        }
        usleep(313);
        return ['error'=>true];
    }
    #[InitModel(UserModel::class)]
    function putPasswordReset($body)
    {
        $user = UserModel::find([
            '^user.delete_date',
            'user_email.email'=> $body['email'],
            'user_password.confirm_code'=>$body['confirm_code'],
            'user_password.confirm_date'=>''
        ]);
        if(!empty($user)){
            // deactivate all passwords
            $this->provider['db']->smart('user_password',['delete_date'=>'.'],[
                'user_id'=>'$'.$user[0]['id'],
                'delete_date'=>''
            ]);
            // activate current password
            $this->provider['db']->smart('user_password',['delete_date'=>'','confirm_date'=>'.'],[
                'user_id'=>'$'.$user[0]['id'],
                'confirm_code'=>$body['confirm_code']
            ]);
            return ['error'=>false];
        }
        return ['error'=>true];
    }

}
