<?php

namespace Neoan3\Component\Metric;

use Neoan3\Apps\SimpleTracker;
use Neoan3\Frame\BluaBlue;

/**
 * Class MetricController
 * @package Neoan3\Component\Metric
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */

class MetricController extends BluaBlue{

    /**
     * GET: api.v1/metric
     * GET: api.v1/metric/{id}
     * GET: api.v1/metric?{query-string}
     * @param array $params
     * @return array
     */
    function getMetric(array $params = []): array
    {
        $endpoint = $this->normalizeRoutingMethod($params['endpoint']);
        SimpleTracker::init(dirname(path) . '/blua-blue-data/');
        $get = SimpleTracker::endpointData($endpoint)->toArray();
        $visits = [];
        if(!empty($get)){
            $visits = $get['visits'];
        }
        $unique = [];
        foreach ($visits as $visit) {
            if (!in_array($visit['identifier'], $unique)) {
                $unique[] = $visit['identifier'];
            }
        }
        return [
            'total' => count($visits),
            'unique' => count($unique)
        ];
    }

    /**
     * POST: api.v1/metric
     * @param array $body
     * @return array
     */
    function postMetric(array $body): array
    {
        $_SERVER['REQUEST_URI'] = $this->normalizeRoutingMethod($body['endpoint']);
        SimpleTracker::init(dirname(path) . '/blua-blue-data/');
        SimpleTracker::track($_SERVER['REMOTE_ADDR']);
        return $this->getMetric($body);
    }

    private function normalizeRoutingMethod($endpoint)
    {
        return urldecode(str_ends_with('/', $endpoint) ? $endpoint : $endpoint . '/');
    }
}
